      SUBROUTINE GETPARS(KP,ULI,EEI,THMI,SLI,CABI,CWI,VAII,RNCI,RSL1I)

      IMPLICIT NONE

      DOUBLE PRECISION  KP(9),ULI,EEI,THMI,SLI,CABI,CWI,VAII,RNCI,RSL1I

      ULI =KP(1)
      EEI =KP(2)
      THMI=KP(3)
      SLI =KP(4)
      CABI=KP(5)
      CWI =KP(6)
      VAII=KP(7)
      RNCI=KP(8)
      RSL1I=KP(9)

      RETURN
      END

      SUBROUTINE PREK6S(KP,LAMBDA,ASOL,PHI0,AVIS,PHIV)

      IMPLICIT NONE

      INTEGER MU_P,NP_P
      PARAMETER(MU_P=11,NP_P=13)
      INTEGER I,J,K,MU,NP,MUM1,COUNTER
      DOUBLE PRECISION KP(9),LAMBDA(1),ASOL,PHI0,AVIS,PHIV
      DOUBLE PRECISION SRM(-1:1),SRP(1),RM(-MU_P:MU_P),RP(NP_P)
      DOUBLE PRECISION ULI,EEI,THMI,SLI,CABI,CWI,VAII,RNCI,RSL1I
      DOUBLE PRECISION PI,TWOPI,PHIRAD,XMUS,XMUV,XMUP
      DOUBLE PRECISION ANGLEM(2*(MU_P-1)),ANGMU(MU_P-1),ANGPHI(NP_P)
      DOUBLE PRECISION BRDFINTS(-MU_P:MU_P,NP_P)
      DOUBLE PRECISION BRDFINTV(-MU_P:MU_P,NP_P)
      DOUBLE PRECISION SBRDF(1),SBRDFTMP(-1:1,1),ALBBRDF
      DOUBLE PRECISION PARS(1000),INPUT(22),XRAD,XA,XB,XC

      DATA INPUT/0,45,180,30,20,9,3,8,0.001,0.001,1,0,0.3,0,-999,-1,
     &0.750,0,1,0,1,-1/

      DATA ANGMU /85.0,80.0,70.0,60.0,50.0,40.0,30.0,20.0,10.0,0.00/
      DATA ANGPHI/0.00,30.0,60.0,90.0,120.0,150.0,180.0,
     s          210.0,240.0,270.0,300.0,330.0,360.0/
 

! UNPACK KUUSK PARAMETER ARRAY
      CALL GETPARS(KP,ULI,EEI,THMI,SLI,CABI,CWI,VAII,RNCI,RSL1I)
! SETUP SOME PARAMETER AND USEFUL COMBINATIONS 
      PI=ACOS(-1.)
      TWOPI=2.*PI
! COPY PARAMETERS INTO VARIABLES FOR SUBROUTINE CALLS
      MU=MU_P
      NP=NP_P
! CONVERT RELATIVE AZIMUTH TO RADIANS AND TAKE SOME COSINES
      PHIRAD=(PHI0-PHIV)*PI/180.
      if (PHIRAD.LT.0.) PHIRAD=PHIRAD+2.*PI
      if (PHIRAD.GT.(2.*PI)) PHIRAD=PHIRAD-2.*PI
      XMUS=COS(ASOL*PI/180.)
      XMUV=COS(AVIS*PI/180.)
      XMUP=COS(PHIRAD)


!      CALL GAUSS(-1.,1.,ANGLEM,WEIGHTM,2*(MU-1))
!      CALL GAUSS(0.,TWOPI,RP,GP,NP)
! PUT THE REGULARLY SPACED AZIMUTH ANGLES INTO THE RP ARRAY AS RADIANS
      DO J=1,NP
        RP(J)=ANGPHI(J)*PI/180.
      ENDDO

! PUT COS(REGULAR ZENITH ANGLE GRID) INTO RM ARRAY
! RM (-mu+1:-1) RUNS OVER RANGE (95,100,110...170,180)
! RM (1:MU)     RUNS OVER RANGE (0,10,20,...80,85)
      MUM1=MU-1
      DO 581 J=-MUM1,-1
       K=MU+J
       RM(-J-MU)=COS(180-ANGMU(-J)*PI/180)
  581 CONTINUE
      DO 582 J=1,MUM1
       K=MU-J
       RM(J)=COS(ANGMU(K)*PI/180)
  582 CONTINUE
      !WRITE(6,*) RM
      !PAUSE
      SRM(-1)=PHIRAD
      SRM(1)=XMUV
      SRM(0)=XMUS 
c     KJP test 1/6/11
c           write(6,*) 'rm=',srm
c           write(6,*) 'rp=',srp
      CALL AKBRDF(EEI,THMI,ULI,SLI,RSL1I,LAMBDA(1),RNCI,CABI,CWI,VAII
     s      ,1,1,SRM,SRP,SBRDFTMP)
      SBRDF(1)=SBRDFTMP(1,1)

      RM(-MU)=PHIRAD
      RM(MU) =XMUV
      RM(0)  =XMUS
c     KJP test 1/6/11
c         write(6,*) 'rm=',rm*180./pi
c         write(6,*) 'rp=',rp
      CALL AKBRDF(EEI,THMI,ULI,SLI,RSL1I,LAMBDA(1),RNCI,CABI,CWI,VAII
     &            ,MU,NP,RM,RP,BRDFINTS)
      RM(-MU)=2.*PI-PHIRAD
      RM(MU) =XMUS
      RM(0)  =XMUV
c     KJP test 1/6/11
c         write(6,*) 'rm=',rm
c         write(6,*) 'rp=',rp
      CALL AKBRDF(EEI,THMI,ULI,SLI,RSL1I,LAMBDA(1),RNCI,CABI,CWI,VAII
     &            ,MU,NP,RM,RP,BRDFINTV)
      CALL AKALBE(ALBBRDF)


      DO I=1,1000
       IF (I.LE.20) THEN
         PARS(I)=INPUT(I)
       ELSE
         PARS(I)=0.0
       ENDIF
      ENDDO

      COUNTER=21
      DO I=1,13
         DO J=1,10
            PARS(COUNTER)=BRDFINTS(J,I)
            COUNTER=COUNTER+1
         ENDDO
      ENDDO
      DO I=1,13
         DO J=1,10
            PARS(COUNTER)=BRDFINTV(J,I)
            COUNTER=COUNTER+1
         ENDDO
      ENDDO

      PARS(COUNTER)=ALBBRDF
      COUNTER=COUNTER+1
      PARS(COUNTER)=SBRDF(1)
      COUNTER=COUNTER+1
      
      PARS(COUNTER)=INPUT(21)
      COUNTER=COUNTER+1
      PARS(COUNTER)=INPUT(22)


      CALL MAIN_SSSSSS(PARS,XRAD,XA,XB,XC,1)

      WRITE(6,*) 'Pixel Radiance at satellite=',XRAD
      WRITE(6,*) 'XA=',XA
      WRITE(6,*) 'XB=',XB
      WRITE(6,*) 'XC=',XC


      RETURN

      END
